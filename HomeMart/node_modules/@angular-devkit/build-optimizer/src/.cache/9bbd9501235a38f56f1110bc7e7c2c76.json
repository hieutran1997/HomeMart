{"remainingRequest":"F:\\HomeMart\\HomeMart\\HomeMart\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!F:\\HomeMart\\HomeMart\\HomeMart\\node_modules\\has-binary2\\index.js","dependencies":[{"path":"F:\\HomeMart\\HomeMart\\HomeMart\\node_modules\\has-binary2\\index.js","mtime":1535439097608},{"path":"F:\\HomeMart\\HomeMart\\HomeMart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535254211933},{"path":"F:\\HomeMart\\HomeMart\\HomeMart\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1535254208003}],"contextDependencies":[],"result":["/* global Blob File */\r\n\r\n/*\r\n * Module requirements.\r\n */\r\n\r\nvar isArray = require('isarray');\r\n\r\nvar toString = Object.prototype.toString;\r\nvar withNativeBlob = typeof Blob === 'function' ||\r\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\r\nvar withNativeFile = typeof File === 'function' ||\r\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = hasBinary;\r\n\r\n/**\r\n * Checks for binary data.\r\n *\r\n * Supports Buffer, ArrayBuffer, Blob and File.\r\n *\r\n * @param {Object} anything\r\n * @api public\r\n */\r\n\r\nfunction hasBinary (obj) {\r\n  if (!obj || typeof obj !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      if (hasBinary(obj[i])) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\r\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\r\n    (withNativeBlob && obj instanceof Blob) ||\r\n    (withNativeFile && obj instanceof File)\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // see: https://github.com/Automattic/has-binary/pull/4\r\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\r\n    return hasBinary(obj.toJSON(), true);\r\n  }\r\n\r\n  for (var key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n",null]}